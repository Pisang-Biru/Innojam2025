/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createServerRootRoute } from '@tanstack/react-start/server'

import { Route as rootRouteImport } from './routes/__root'
import { Route as TestRouteImport } from './routes/test'
import { Route as ResultsRouteImport } from './routes/results'
import { Route as PreferencesRouteImport } from './routes/preferences'
import { Route as AccountRouteImport } from './routes/account'
import { Route as IndexRouteImport } from './routes/index'
import { Route as DemoTanstackQueryRouteImport } from './routes/demo.tanstack-query'
import { Route as ApiTest2RouteImport } from './routes/api.test2'
import { Route as ApiTestRouteImport } from './routes/api/test'
import { Route as ApiNfcDataRouteImport } from './routes/api/nfc-data'
import { Route as AdminReadItemRouteImport } from './routes/admin/read-item'
import { Route as AdminCreateItemRouteImport } from './routes/admin/create-item'
import { Route as AdminCreateCardRouteImport } from './routes/admin/create-card'
import { Route as DemoStartServerFuncsRouteImport } from './routes/demo.start.server-funcs'
import { Route as DemoStartApiRequestRouteImport } from './routes/demo.start.api-request'
import { ServerRoute as ApiDemoNamesServerRouteImport } from './routes/api.demo-names'

const rootServerRouteImport = createServerRootRoute()

const TestRoute = TestRouteImport.update({
  id: '/test',
  path: '/test',
  getParentRoute: () => rootRouteImport,
} as any)
const ResultsRoute = ResultsRouteImport.update({
  id: '/results',
  path: '/results',
  getParentRoute: () => rootRouteImport,
} as any)
const PreferencesRoute = PreferencesRouteImport.update({
  id: '/preferences',
  path: '/preferences',
  getParentRoute: () => rootRouteImport,
} as any)
const AccountRoute = AccountRouteImport.update({
  id: '/account',
  path: '/account',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoTanstackQueryRoute = DemoTanstackQueryRouteImport.update({
  id: '/demo/tanstack-query',
  path: '/demo/tanstack-query',
  getParentRoute: () => rootRouteImport,
} as any)
const ApiTest2Route = ApiTest2RouteImport.update({
  id: '/api/test2',
  path: '/api/test2',
  getParentRoute: () => rootRouteImport,
} as any)
const ApiTestRoute = ApiTestRouteImport.update({
  id: '/api/test',
  path: '/api/test',
  getParentRoute: () => rootRouteImport,
} as any)
const ApiNfcDataRoute = ApiNfcDataRouteImport.update({
  id: '/api/nfc-data',
  path: '/api/nfc-data',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminReadItemRoute = AdminReadItemRouteImport.update({
  id: '/admin/read-item',
  path: '/admin/read-item',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminCreateItemRoute = AdminCreateItemRouteImport.update({
  id: '/admin/create-item',
  path: '/admin/create-item',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminCreateCardRoute = AdminCreateCardRouteImport.update({
  id: '/admin/create-card',
  path: '/admin/create-card',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoStartServerFuncsRoute = DemoStartServerFuncsRouteImport.update({
  id: '/demo/start/server-funcs',
  path: '/demo/start/server-funcs',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoStartApiRequestRoute = DemoStartApiRequestRouteImport.update({
  id: '/demo/start/api-request',
  path: '/demo/start/api-request',
  getParentRoute: () => rootRouteImport,
} as any)
const ApiDemoNamesServerRoute = ApiDemoNamesServerRouteImport.update({
  id: '/api/demo-names',
  path: '/api/demo-names',
  getParentRoute: () => rootServerRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/account': typeof AccountRoute
  '/preferences': typeof PreferencesRoute
  '/results': typeof ResultsRoute
  '/test': typeof TestRoute
  '/admin/create-card': typeof AdminCreateCardRoute
  '/admin/create-item': typeof AdminCreateItemRoute
  '/admin/read-item': typeof AdminReadItemRoute
  '/api/nfc-data': typeof ApiNfcDataRoute
  '/api/test': typeof ApiTestRoute
  '/api/test2': typeof ApiTest2Route
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/demo/start/api-request': typeof DemoStartApiRequestRoute
  '/demo/start/server-funcs': typeof DemoStartServerFuncsRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/account': typeof AccountRoute
  '/preferences': typeof PreferencesRoute
  '/results': typeof ResultsRoute
  '/test': typeof TestRoute
  '/admin/create-card': typeof AdminCreateCardRoute
  '/admin/create-item': typeof AdminCreateItemRoute
  '/admin/read-item': typeof AdminReadItemRoute
  '/api/nfc-data': typeof ApiNfcDataRoute
  '/api/test': typeof ApiTestRoute
  '/api/test2': typeof ApiTest2Route
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/demo/start/api-request': typeof DemoStartApiRequestRoute
  '/demo/start/server-funcs': typeof DemoStartServerFuncsRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/account': typeof AccountRoute
  '/preferences': typeof PreferencesRoute
  '/results': typeof ResultsRoute
  '/test': typeof TestRoute
  '/admin/create-card': typeof AdminCreateCardRoute
  '/admin/create-item': typeof AdminCreateItemRoute
  '/admin/read-item': typeof AdminReadItemRoute
  '/api/nfc-data': typeof ApiNfcDataRoute
  '/api/test': typeof ApiTestRoute
  '/api/test2': typeof ApiTest2Route
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/demo/start/api-request': typeof DemoStartApiRequestRoute
  '/demo/start/server-funcs': typeof DemoStartServerFuncsRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/account'
    | '/preferences'
    | '/results'
    | '/test'
    | '/admin/create-card'
    | '/admin/create-item'
    | '/admin/read-item'
    | '/api/nfc-data'
    | '/api/test'
    | '/api/test2'
    | '/demo/tanstack-query'
    | '/demo/start/api-request'
    | '/demo/start/server-funcs'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/account'
    | '/preferences'
    | '/results'
    | '/test'
    | '/admin/create-card'
    | '/admin/create-item'
    | '/admin/read-item'
    | '/api/nfc-data'
    | '/api/test'
    | '/api/test2'
    | '/demo/tanstack-query'
    | '/demo/start/api-request'
    | '/demo/start/server-funcs'
  id:
    | '__root__'
    | '/'
    | '/account'
    | '/preferences'
    | '/results'
    | '/test'
    | '/admin/create-card'
    | '/admin/create-item'
    | '/admin/read-item'
    | '/api/nfc-data'
    | '/api/test'
    | '/api/test2'
    | '/demo/tanstack-query'
    | '/demo/start/api-request'
    | '/demo/start/server-funcs'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AccountRoute: typeof AccountRoute
  PreferencesRoute: typeof PreferencesRoute
  ResultsRoute: typeof ResultsRoute
  TestRoute: typeof TestRoute
  AdminCreateCardRoute: typeof AdminCreateCardRoute
  AdminCreateItemRoute: typeof AdminCreateItemRoute
  AdminReadItemRoute: typeof AdminReadItemRoute
  ApiNfcDataRoute: typeof ApiNfcDataRoute
  ApiTestRoute: typeof ApiTestRoute
  ApiTest2Route: typeof ApiTest2Route
  DemoTanstackQueryRoute: typeof DemoTanstackQueryRoute
  DemoStartApiRequestRoute: typeof DemoStartApiRequestRoute
  DemoStartServerFuncsRoute: typeof DemoStartServerFuncsRoute
}
export interface FileServerRoutesByFullPath {
  '/api/demo-names': typeof ApiDemoNamesServerRoute
}
export interface FileServerRoutesByTo {
  '/api/demo-names': typeof ApiDemoNamesServerRoute
}
export interface FileServerRoutesById {
  __root__: typeof rootServerRouteImport
  '/api/demo-names': typeof ApiDemoNamesServerRoute
}
export interface FileServerRouteTypes {
  fileServerRoutesByFullPath: FileServerRoutesByFullPath
  fullPaths: '/api/demo-names'
  fileServerRoutesByTo: FileServerRoutesByTo
  to: '/api/demo-names'
  id: '__root__' | '/api/demo-names'
  fileServerRoutesById: FileServerRoutesById
}
export interface RootServerRouteChildren {
  ApiDemoNamesServerRoute: typeof ApiDemoNamesServerRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/test': {
      id: '/test'
      path: '/test'
      fullPath: '/test'
      preLoaderRoute: typeof TestRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/results': {
      id: '/results'
      path: '/results'
      fullPath: '/results'
      preLoaderRoute: typeof ResultsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/preferences': {
      id: '/preferences'
      path: '/preferences'
      fullPath: '/preferences'
      preLoaderRoute: typeof PreferencesRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/account': {
      id: '/account'
      path: '/account'
      fullPath: '/account'
      preLoaderRoute: typeof AccountRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/tanstack-query': {
      id: '/demo/tanstack-query'
      path: '/demo/tanstack-query'
      fullPath: '/demo/tanstack-query'
      preLoaderRoute: typeof DemoTanstackQueryRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/api/test2': {
      id: '/api/test2'
      path: '/api/test2'
      fullPath: '/api/test2'
      preLoaderRoute: typeof ApiTest2RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/api/test': {
      id: '/api/test'
      path: '/api/test'
      fullPath: '/api/test'
      preLoaderRoute: typeof ApiTestRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/api/nfc-data': {
      id: '/api/nfc-data'
      path: '/api/nfc-data'
      fullPath: '/api/nfc-data'
      preLoaderRoute: typeof ApiNfcDataRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/read-item': {
      id: '/admin/read-item'
      path: '/admin/read-item'
      fullPath: '/admin/read-item'
      preLoaderRoute: typeof AdminReadItemRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/create-item': {
      id: '/admin/create-item'
      path: '/admin/create-item'
      fullPath: '/admin/create-item'
      preLoaderRoute: typeof AdminCreateItemRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/create-card': {
      id: '/admin/create-card'
      path: '/admin/create-card'
      fullPath: '/admin/create-card'
      preLoaderRoute: typeof AdminCreateCardRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/start/server-funcs': {
      id: '/demo/start/server-funcs'
      path: '/demo/start/server-funcs'
      fullPath: '/demo/start/server-funcs'
      preLoaderRoute: typeof DemoStartServerFuncsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/start/api-request': {
      id: '/demo/start/api-request'
      path: '/demo/start/api-request'
      fullPath: '/demo/start/api-request'
      preLoaderRoute: typeof DemoStartApiRequestRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}
declare module '@tanstack/react-start/server' {
  interface ServerFileRoutesByPath {
    '/api/demo-names': {
      id: '/api/demo-names'
      path: '/api/demo-names'
      fullPath: '/api/demo-names'
      preLoaderRoute: typeof ApiDemoNamesServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AccountRoute: AccountRoute,
  PreferencesRoute: PreferencesRoute,
  ResultsRoute: ResultsRoute,
  TestRoute: TestRoute,
  AdminCreateCardRoute: AdminCreateCardRoute,
  AdminCreateItemRoute: AdminCreateItemRoute,
  AdminReadItemRoute: AdminReadItemRoute,
  ApiNfcDataRoute: ApiNfcDataRoute,
  ApiTestRoute: ApiTestRoute,
  ApiTest2Route: ApiTest2Route,
  DemoTanstackQueryRoute: DemoTanstackQueryRoute,
  DemoStartApiRequestRoute: DemoStartApiRequestRoute,
  DemoStartServerFuncsRoute: DemoStartServerFuncsRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
const rootServerRouteChildren: RootServerRouteChildren = {
  ApiDemoNamesServerRoute: ApiDemoNamesServerRoute,
}
export const serverRouteTree = rootServerRouteImport
  ._addFileChildren(rootServerRouteChildren)
  ._addFileTypes<FileServerRouteTypes>()
